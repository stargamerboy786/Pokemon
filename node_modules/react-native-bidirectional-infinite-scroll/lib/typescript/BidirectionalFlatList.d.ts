import React from 'react';
import { FlatListProps } from 'react-native';
export declare type Props<T> = Omit<FlatListProps<T>, 'maintainVisibleContentPosition'> & {
    /**
     * Called once when the scroll position gets close to end of list. This must return a promise.
     * You can `onEndReachedThreshold` as distance from end of list, when this function should be called.
     */
    onEndReached: () => Promise<void>;
    /**
     * Called once when the scroll position gets close to begining of list. This must return a promise.
     * You can `onStartReachedThreshold` as distance from beginning of list, when this function should be called.
     */
    onStartReached: () => Promise<void>;
    /** Color for inline loading indicator */
    activityIndicatorColor?: string;
    /**
     * Enable autoScrollToTop.
     * In chat type applications, you want to auto scroll to bottom, when new message comes it.
     */
    enableAutoscrollToTop?: boolean;
    /**
     * If `enableAutoscrollToTop` is true, the scroll threshold below which auto scrolling should occur.
     */
    autoscrollToTopThreshold?: number;
    /** Scroll distance from beginning of list, when onStartReached should be called. */
    onStartReachedThreshold?: number;
    /**
     * Scroll distance from end of list, when onStartReached should be called.
     * Please note that this is different from onEndReachedThreshold of FlatList from react-native.
     */
    onEndReachedThreshold?: number;
    /** If true, inline loading indicators will be shown. Default - true */
    showDefaultLoadingIndicators?: boolean;
    /** Custom UI component for header inline loading indicator */
    HeaderLoadingIndicator?: React.ComponentType;
    /** Custom UI component for footer inline loading indicator */
    FooterLoadingIndicator?: React.ComponentType;
    /** Custom UI component for header indicator of FlatList. Only used when `showDefaultLoadingIndicators` is false */
    ListHeaderComponent?: React.ComponentType;
    /** Custom UI component for footer indicator of FlatList. Only used when `showDefaultLoadingIndicators` is false */
    ListFooterComponent?: React.ComponentType;
};
/**
 * Note:
 * - `onEndReached` and `onStartReached` must return a promise.
 * - `onEndReached` and `onStartReached` only get called once, per content length.
 * - maintainVisibleContentPosition is fixed, and can't be modified through props.
 * - doesn't accept `ListFooterComponent` via prop, since it is occupied by `FooterLoadingIndicator`.
 *    Set `showDefaultLoadingIndicators` to use `ListFooterComponent`.
 * - doesn't accept `ListHeaderComponent` via prop, since it is occupied by `HeaderLoadingIndicator`
 *    Set `showDefaultLoadingIndicators` to use `ListHeaderComponent`.
 */
export declare const BidirectionalFlatList: BidirectionalFlatListType;
declare type BidirectionalFlatListType = <T extends any>(props: Props<T>) => React.ReactElement;
export {};
